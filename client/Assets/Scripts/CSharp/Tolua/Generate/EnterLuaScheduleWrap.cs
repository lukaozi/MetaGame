//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EnterLuaScheduleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EnterLuaSchedule), typeof(SimpleSchedule));
		L.RegFunction("OnGameInitFinish", OnGameInitFinish);
		L.RegFunction("New", _CreateEnterLuaSchedule);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("gameLuaFinish", get_gameLuaFinish, set_gameLuaFinish);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEnterLuaSchedule(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				EnterLuaSchedule obj = new EnterLuaSchedule();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EnterLuaSchedule.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGameInitFinish(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 1);
			EnterLuaSchedule.OnGameInitFinish(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameLuaFinish(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, EnterLuaSchedule.gameLuaFinish);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gameLuaFinish(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			EnterLuaSchedule.gameLuaFinish = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

