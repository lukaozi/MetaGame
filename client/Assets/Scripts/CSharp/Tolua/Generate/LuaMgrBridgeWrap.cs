//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaMgrBridgeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaMgrBridge), typeof(SingletonMonoBehaviour<LuaMgrBridge>));
		L.RegFunction("ResetStart", ResetStart);
		L.RegFunction("NewByPath", NewByPath);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("LuaState", get_LuaState, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetStart(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				LuaMgrBridge obj = (LuaMgrBridge)ToLua.CheckObject<LuaMgrBridge>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				LuaInterface.LuaTable o = obj.ResetStart(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				LuaMgrBridge obj = (LuaMgrBridge)ToLua.CheckObject<LuaMgrBridge>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				LuaInterface.LuaTable o = obj.ResetStart(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaMgrBridge.ResetStart");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewByPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaMgrBridge obj = (LuaMgrBridge)ToLua.CheckObject<LuaMgrBridge>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaInterface.LuaTable o = obj.NewByPath(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaMgrBridge obj = (LuaMgrBridge)o;
			LuaInterface.LuaState ret = obj.LuaState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LuaState on a nil value");
		}
	}
}

